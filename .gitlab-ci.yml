image: quay.io/vauxoo/dockerv:latest
stages:
  - pre
  - test
  - post
  - deploy

precommit:
  stage: pre
  tags:
    - lint
  script:
    - source variables.sh
    - PRECOMMIT_HOOKS_TYPE=${PRECOMMIT_HOOKS_TYPE},-optional pre-commit-vauxoo

precommit_optional:
  stage: pre
  allow_failure: true
  tags:
    - lint
  script:
    - pre-commit-vauxoo -t optional --fail-optional

build_docker:
  stage: pre
  tags:
    - build
  timeout: 3 hours 30 minutes
  script:
    - source variables.sh
    - vxci check_keys
    - vxci build_image --push_image
  artifacts:
    paths:
      - $CI_COMMIT_REF_SLUG

odoo_test:
  stage: test
  tags:
    - odoo
  needs: ["build_docker"]
  script:
    - source variables.sh
    - source $CI_COMMIT_REF_SLUG/image_name.env
    - vxci check_keys
    - vxci test_repo --allow_deprecated
  artifacts:
    when: always
    paths:
      - $CI_COMMIT_REF_SLUG

publish_coverage:
  stage: post
  tags:
    - build
  coverage: '/^TOTAL.*\s+(\d+(?:\.\d+)?\%)$/'
  allow_failure: true
  needs: ["odoo_test"]
  script:
    - source variables.sh
    - source $CI_COMMIT_REF_SLUG/image_name.env
    - vxci check_keys
    - vxci push_coverage_combine
  artifacts:
    when: always
    paths:
      - $CI_COMMIT_REF_SLUG
    reports:
      coverage_report:
        coverage_format: cobertura
        path: $CI_COMMIT_REF_SLUG/coverage.xml
  environment:
    name: coverage
    url: https://coverage.vauxoo.com/${CI_COMMIT_REF_SLUG}-${CI_PROJECT_NAME}

odoo_warnings:
  stage: post
  tags:
    - build
  allow_failure: true
  needs: ["odoo_test"]
  script:
    - vxci check_log --logpath="./$CI_COMMIT_REF_SLUG"

deploy_staging:
  stage: deploy
  tags:
    - deploy
  only:
    - "13.0"
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )'
    - eval $(ssh-agent -s)
    - echo "$PRIVATE_DEPLOY_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $STAGING_SERVER >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - source variables.sh
    - ssh $SSH_USER@$STAGING_SERVER "deployvcmd restore -f ~/config/$CUSTOMER.conf -s $DEFAULT_PASSWORD --jobs=$JOBS --update-method=$UPDATE_METHOD"

deploy_production:
  stage: deploy
  tags:
    - deploy
  only:
    - "13.0"
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )'
    - eval $(ssh-agent -s)
    - echo "$PRIVATE_DEPLOY_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $PRODUCTION_SERVER >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - source variables.sh
    - ssh $SSH_USER@$PRODUCTION_SERVER "deployvcmd update_production -f ~/config/${CUSTOMER}.conf"
  needs: ["deploy_staging"]
  when: manual
